package arch.galaxyeclipse.shared.protocol;

option java_outer_classname = "GeProtocol";
option optimize_for = SPEED;

message Packet {
    enum Type {
        DYNAMIC_OBJECTS_REQUEST     = 1;
        DYNAMIC_OBJECTS_RESPONSE    = 2;
        SHIP_STATE_REQUEST          = 3;
        SHIP_STATE_RESPONSE         = 4;

        CLIENT_ACTION               = 5;

        AUTH_REQUEST                = 16;
        AUTH_RESPONSE               = 17;

        GAME_INFO                   = 18;

        CHAT_SEND_MESSAGE           = 22;
        CHAR_RECEIVE_MESSAGE        = 23;
    }

    required Type                   type                    = 1;

    optional DynamicObjectsRequest  dynamicObjectsResponse  = 2;
    optional ShipStateResponse      shipStateResponse       = 3;
    optional ClientAction           clientAction            = 4;
    
    optional AuthRequest            authRequest             = 16;
    optional AuthResponse           authResponse            = 17;

    optional GameInfo               gameInfo                = 18;
    optional ChangeCommand          changeCommand           = 19;

    optional ChatSendMessage        chatSendMessage         = 20;
    optional ChatReceiveMessage     typesMapResponse        = 21;
}


message DynamicObjectsRequest {

}
message DynamicObjectsResponse {
    repeated LocationDynamicObject objects = 1;

    message LocationDynamicObject {
        required int32 locationDynamicObjectId  = 1;
        required int32 objectTypeId             = 2;
        required int32 nativeId                 = 3;
        required int32 x                        = 4;
        required int32 y                        = 5;
    }
}
message ShipStateRequest {

}
message ShipStateResponse {
    required int32 moveSpeed        = 1;
    required int32 rotationSpeed    = 2;
    required int32 hp               = 3;
    required int32 armorDurability  = 4;
    required int32 rotationAngle    = 5;
}


message ClientAction {
    enum ClientActionType {
        // A S W D
        ROTATE_LEFT     = 1;
        ROTATE_RIGHT    = 2;
        MOVE            = 3;
        STOP            = 4;

        MAP_CLICK       = 5;
        MINI_MAP_CLICK  = 6;
        OBJECT_CLICK    = 7;       // LBM
        LOOT_PICK       = 8;       // RMB

        // Space button
        ATTACK_START    = 9;
        ATTACK_STOP     = 10;

        ROCKET_SHOOT    = 16;      // SHIFT
    }

    required ClientActionType   type                    = 1;

    optional Point              point                   = 2;
    optional int32              locationObjectId        = 3;
    optional int32              locationObjectTypeId    = 4;

    message Point {
        required int32 x = 1;
        required int32 y = 2;
    }
}


message AuthRequest {
    required string username = 1;
    required string password = 2;
}
message AuthResponse {
    required bool isSuccess = 1;
}


message GameInfo {
    required int32                  locationId              = 1;
    required StaticObjects          locationStaticObjects   = 2;
    required StaticObjects          locationDrawableObject  = 3;
    required TypesMap               typesMap                = 4;

    message StaticObjects {
        repeated StaticObject objects = 1;

        message StaticObject {
            required int32 objectId = 1;
            required int32 positionX = 2;
            required int32 positionY = 3;
            required int32 objectTypeId = 4;
        }
    }

    message TypesMap {
        repeated ItemType itemTypes = 1;
        repeated WeaponType weaponTypes = 2;
        repeated LocationObjectType locationObjectTypes = 3;

        message ItemType {
            required int32 id = 1;
            required string name = 2;
        }

        message WeaponType {
            required int32 id = 1;
            required string name = 2;
        }

        message LocationObjectType {
            required int32 id = 1;
            required string name = 2;
        }
    }

    message ShipStaticInfo {
        // Ship config values
        required int32          moveMaxSpeed            = 1;
        required int32          rotationMaxSpeed        = 2;
        required int32          moveAccelerationSpeed   = 3;
        required int32          rotationAcceleration    = 4;
        required int32          armor                   = 5;
        required int32          energyMax               = 6;
        required int32          hpMax                   = 7;
        required int32          energyRegen             = 8;
        required int32          hpRegen                 = 9;

        // Ship type values
        required string         name                    = 10;
        required int32          armorDurability         = 11;
        required int32          weaponSlotsCount        = 12;
        required int32          bonusSlotsCount         = 13;

        repeated Item           inventoryItems          = 14;
        repeated Bonus          shipBonus               = 15;
        repeated Weapon         shipWeapons             = 16;
        required Engine         shipEngine              = 17;

        message Item {
            required int32  itemId      = 1;
            required string name        = 2;
            required string description = 3;
            required int32  price       = 4;
            required int32  itemTypeId  = 5;

            optional Bonus  bonus       = 6;
            optional Weapon weapon      = 7;
            optional Engine engine      = 8;
        }

        message Bonus {
            required int32 bonusId      = 1;
            required int32 bonusValue   = 2;
            required int32 bonusTypeId  = 3;
        }

        message Weapon {
            required int32 weaponId     = 1;
            required int32 damage       = 2;
            required int32 delaySpeed   = 3;
            required int32 bulletSpeed  = 4;
            required int32 maxDistance  = 5;
            required int32 energyCost   = 6;
        }

        message Engine {
            required int32 engineId                     = 1;
            required int32 moveAccelerationBonus        = 2;
            required int32 moveMaxSpeedBonus            = 3;
            required int32 rotationAccelerationBonus    = 4;
            required int32 rotationMaxSpeed             = 5;
        }
    }
}
message ChangeCommand {
    required bytes serializedCommand = 1;
}


message ChatSendMessage {
    required string message = 1;
}
message ChatReceiveMessage {
    required string message = 1;
    required string sender  = 2;
}