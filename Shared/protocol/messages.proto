package arch.galaxyeclipse.shared.protocol;

option java_outer_classname = "GeProtocol";
option optimize_for = SPEED;

message GePacket {
    enum Type {
        DYNAMIC_OBJECTS_REQUEST     = 1;
        DYNAMIC_OBJECTS_RESPONSE    = 2;

        SHIP_STATE_REQUEST          = 3;
        SHIP_STATE_RESPONSE         = 4;

        CLIENT_ACTION               = 5;

        AUTH_REQUEST                = 16;
        AUTH_RESPONSE               = 17;

        LOCATION_INFO               = 30;
        STARTUP_INFO                = 31;
        SHIP_STATIC_INFO_COMMAND    = 32;

        CHAT_SEND_MESSAGE           = 60;
        CHAT_RECEIVE_MESSAGE        = 61;
    }

    required Type                             type                    = 1;

    optional GeDynamicObjectsResponse         dynamicObjectsResponse  = 2;
    optional GeShipStateResponse              shipStateResponse       = 3;
    optional GeClientActionPacket             clientAction            = 4;

    optional GeAuthRequest                    authRequest             = 16;
    optional GeAuthResponse                   authResponse            = 17;

    optional GeLocationInfoPacket             locationInfo            = 18;
    optional GeStartupInfoPacket              startupInfo             = 19;
    optional GeShipStaticInfoCommandPacket    gameInfoCommandHolder   = 20;

    optional GeChatSendMessagePacket          chatSendMessage         = 21;
    optional GeChatReceiveMessagePacket       chatReceiveMessage      = 22;
}


message GeDynamicObjectsRequest {

}
message GeDynamicObjectsResponse {
    repeated GeLocationInfoPacket.GeLocationObjectPacket objects = 1;
}


message GeShipStateRequest {

}
message GeShipStateResponse {
    required float moveSpeed        = 1;
    required float rotationSpeed    = 2;
    required int32 hp               = 3;
    required int32 armorDurability  = 4;
    required float rotationAngle    = 5;
    required float positionX        = 6;
    required float positionY        = 7;
    required int32 locationObjectId = 8;
    required int32 energy           = 9;
}


message GeClientActionPacket {
    enum ClientActionType {
        // A S W D
        ROTATE_LEFT_UP      = 1;
        ROTATE_LEFT_DOWN    = 2;
        ROTATE_RIGHT_UP     = 3;
        ROTATE_RIGHT_DOWN   = 4;
        MOVE_UP             = 5;
        MOVE_DOWN           = 6;
        STOP_UP             = 7;
        STOP_DOWN           = 8;

        OBJECT_CLICK        = 9;   // LBM
        LOOT_PICK           = 10;  // RMB

        ATTACK              = 11;  // Space button
        FOCUS               = 12;

        ROCKET_SHOOT        = 16;  // SHIFT
    }

    required ClientActionType       type            = 1;
    optional GeClientFocusTarget    focusTarget     = 2;

    message GeClientFocusTarget {
        required int32 objectId = 1;
    }
}


message GeAuthRequest {
    required string username = 1;
    required string password = 2;
}
message GeAuthResponse {
    required bool isSuccess = 1;
}


message GeLocationInfoPacket {
    required int32                  locationId              = 1;
    required string                 name                    = 2;
    required int32                  width                   = 3;
    required int32                  height                  = 4;
    required GeCachedObjectsPacket  locationCachedObjects   = 5;

    message GeCachedObjectsPacket {
        repeated GeLocationObjectPacket objects = 1;
    }

    message GeLocationObjectPacket {
        required int32 objectId         = 1;
        required int32 objectTypeId     = 2;
        required int32 nativeId         = 3;
        required float positionX        = 4;
        required float positionY        = 5;
        required float rotationAngle    = 6;
    }
}
message GeShipStaticInfoPacket {
    // Ship config values
    required float          moveMaxSpeed            = 1;
    required float          rotationMaxSpeed        = 2;
    required float          moveAccelerationSpeed   = 3;
    required float          rotationAcceleration    = 4;
    required int32          armor                   = 5;
    required int32          energyMax               = 6;
    required int32          hpMax                   = 7;
    required int32          energyRegen             = 8;
    required int32          hpRegen                 = 9;

    // Ship type values
    required string         name                    = 10;
    required int32          armorDurability         = 11;
    required int32          weaponSlotsCount        = 12;
    required int32          bonusSlotsCount         = 13;

    repeated GeItemPacket     inventoryItems        = 14;
    repeated GeItemPacket     shipBonus             = 15;
    repeated GeItemPacket     shipWeapons           = 16;
    required GeItemPacket     shipEngine            = 17;

    message GeItemPacket {
        required int32  itemId              = 1;
        required string name                = 2;
        required string description         = 3;
        required int32  price               = 4;
        required int32  itemTypeId          = 5;

        optional GeBonusPacket  bonus       = 6;
        optional GeWeaponPacket weapon      = 7;
        optional GeEnginePacket engine      = 8;

        message GeBonusPacket {
            required int32 bonusValue   = 1;
            required int32 bonusTypeId  = 2;
        }

        message GeWeaponPacket {
            required int32 damage       = 1;
            required int32 shotDelay    = 2;
            required float bulletSpeed  = 3;
            required int32 maxDistance  = 4;
            required int32 energyCost   = 5;
        }

        message GeEnginePacket {
            required float moveAccelerationBonus        = 1;
            required float moveMaxSpeedBonus            = 2;
            required float rotationAccelerationBonus    = 3;
            required float rotationMaxSpeedBonus        = 4;
        }
    }
}
message GeTypesMapPacket {
    repeated Type itemTypes             = 1;
    repeated Type weaponTypes           = 2;
    repeated Type locationObjectTypes   = 3;
    repeated Type bonusTypes            = 4;

    message Type {
        required int32 id       = 1;
        required string name    = 2;
    }
}
message GeStartupInfoPacket {
    required GeLocationInfoPacket   locationInfo    = 1;
    required GeTypesMapPacket       typesMap        = 2;
    required GeShipStaticInfoPacket shipStaticInfo  = 3;
}
message GeShipStaticInfoCommandPacket {
    required bytes serializedCommand = 1;
}


message GeChatSendMessagePacket {
    required string message = 1;
}
message GeChatReceiveMessagePacket {
    required string message = 1;
    required string sender  = 2;
}