package arch.galaxyeclipse.shared.protocol;

option java_outer_classname = "GeProtocol";
option optimize_for = SPEED;

message Packet {
    enum Type {
        DYNAMIC_OBJECTS_REQUEST     = 1;
        DYNAMIC_OBJECTS_RESPONSE    = 2;

        SHIP_STATE_REQUEST          = 3;
        SHIP_STATE_RESPONSE         = 4;

        CLIENT_ACTION               = 5;

        AUTH_REQUEST                = 16;
        AUTH_RESPONSE               = 17;

        LOCATION_INFO               = 30;
        STARTUP_INFO                = 31;
        SHIP_STATIC_INFO_COMMAND    = 32;

        CHAT_SEND_MESSAGE           = 60;
        CHAR_RECEIVE_MESSAGE        = 61;
    }

    required Type                       type                    = 1;

    optional DynamicObjectsResponse         dynamicObjectsResponse  = 2;
    optional ShipStateResponse              shipStateResponse       = 3;
    optional ClientActionPacket             clientAction            = 4;

    optional AuthRequest                    authRequest             = 16;
    optional AuthResponse                   authResponse            = 17;

    optional LocationInfoPacket             locationInfo            = 18;
    optional StartupInfoPacket              startupInfo             = 19;
    optional ShipStaticInfoCommandPacket    gameInfoCommandHolder   = 20;

    optional ChatSendMessagePacket          chatSendMessage         = 21;
    optional ChatReceiveMessagePacket       typesMapResponse        = 22;
}


message DynamicObjectsRequest {

}
message DynamicObjectsResponse {
    repeated LocationInfoPacket.LocationObjectPacket objects = 1;
}


message ShipStateRequest {

}
message ShipStateResponse {
    required float moveSpeed        = 1;
    required float rotationSpeed    = 2;
    required int32 hp               = 3;
    required int32 armorDurability  = 4;
    required float rotationAngle    = 5;
    required float positionX        = 6;
    required float positionY        = 7;
    required int32 locationObjectId = 8;
}


message ClientActionPacket {
    enum ClientActionType {
        // A S W D
        ROTATE_LEFT     = 1;
        ROTATE_RIGHT    = 2;
        MOVE            = 3;
        STOP            = 4;

        OBJECT_CLICK    = 7;       // LBM
        LOOT_PICK       = 8;       // RMB

        // Space button
        ATTACK          = 9;

        ROCKET_SHOOT    = 16;      // SHIFT
    }

    required ClientActionType   type                    = 1;

    optional int32              locationObjectId        = 2;
    optional int32              locationObjectTypeId    = 3;
}


message AuthRequest {
    required string username = 1;
    required string password = 2;
}
message AuthResponse {
    required bool isSuccess = 1;
}


message LocationInfoPacket {
    required int32                  locationId              = 1;
    required string                 name                    = 2;
    required float                  width                   = 3;
    required float                  height                  = 4;
    required CachedObjectsPacket    locationCachedObjects   = 5;

    message CachedObjectsPacket {
        repeated LocationObjectPacket objects = 1;
    }

    message LocationObjectPacket {
        required int32 objectId         = 1;
        required int32 objectTypeId     = 2;
        required int32 nativeId         = 3;
        required float positionX        = 4;
        required float positionY        = 5;
        required float rotationAngle    = 6;
    }
}
message ShipStaticInfoPacket {
    // Ship config values
    required float          moveMaxSpeed            = 1;
    required float          rotationMaxSpeed        = 2;
    required float          moveAccelerationSpeed   = 3;
    required float          rotationAcceleration    = 4;
    required int32          armor                   = 5;
    required int32          energyMax               = 6;
    required int32          hpMax                   = 7;
    required int32          energyRegen             = 8;
    required int32          hpRegen                 = 9;

    // Ship type values
    required string         name                    = 10;
    required int32          armorDurability         = 11;
    required int32          weaponSlotsCount        = 12;
    required int32          bonusSlotsCount         = 13;

    repeated ItemPacket     inventoryItems          = 14;
    repeated ItemPacket     shipBonus               = 15;
    repeated ItemPacket     shipWeapons             = 16;
    required ItemPacket     shipEngine              = 17;

    message ItemPacket {
        required int32  itemId      = 1;
        required string name        = 2;
        required string description = 3;
        required int32  price       = 4;
        required int32  itemTypeId  = 5;

        optional BonusPacket  bonus       = 6;
        optional WeaponPacket weapon      = 7;
        optional EnginePacket engine      = 8;

        message BonusPacket {
            required int32 bonusValue   = 1;
            required int32 bonusTypeId  = 2;
        }

        message WeaponPacket {
            required int32 damage       = 1;
            required int32 delaySpeed   = 2;
            required int32 bulletSpeed  = 3;
            required int32 maxDistance  = 4;
            required int32 energyCost   = 5;
        }

        message EnginePacket {
            required float moveAccelerationBonus        = 1;
            required float moveMaxSpeedBonus            = 2;
            required float rotationAccelerationBonus    = 3;
            required float rotationMaxSpeedBonus        = 4;
        }
    }
}
message TypesMapPacket {
    repeated Type itemTypes             = 1;
    repeated Type weaponTypes           = 2;
    repeated Type locationObjectTypes   = 3;
    repeated Type bonusTypes            = 4;

    message Type {
        required int32 id       = 1;
        required string name    = 2;
    }
}
message StartupInfoPacket {
    required LocationInfoPacket   locationInfo    = 1;
    required TypesMapPacket       typesMap        = 2;
    required ShipStaticInfoPacket shipStaticInfo  = 3;
}
message ShipStaticInfoCommandPacket {
    required bytes serializedCommand = 1;
}


message ChatSendMessagePacket {
    required string message = 1;
}
message ChatReceiveMessagePacket {
    required string message = 1;
    required string sender  = 2;
}